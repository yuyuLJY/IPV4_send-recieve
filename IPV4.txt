/*
* THIS FILE IS FOR IP TEST
*/
// system support
#include "sysInclude.h"
extern void ip_DiscardPkt(char* pBuffer,int type);

extern void ip_SendtoLower(char*pBuffer,int length);

extern void ip_SendtoUp(char *pBuffer,int length);

extern unsigned int getIpv4Address();

// implemented by students

int stud_ip_recv(char *pBuffer,unsigned short length)
{	int version = pBuffer[0]>>4;
	int headLength = pBuffer[0] &0xF;
	int TTL = pBuffer[8];
      int destAddress = ntohl(*(pBuffer + 16));  
	if (version != 4){  //Version==4
      	ip_DiscardPkt(pBuffer, STUD_IP_TEST_VERSION_ERROR);  
      	return 1;  
    	}  
	if(TTL<=0){
		ip_DiscardPkt(pBuffer, STUD_IP_TEST_TTL_ERROR); 
		return 1;
	}
	if(headLength<5){
		ip_DiscardPkt(pBuffer, STUD_IP_TEST_HEADLEN_ERROR); 
		return 1;
	}
	if(destAddress!=getIpv4Address()){
		//check broadcast address
		ip_DiscardPkt(pBuffer, STUD_IP_TEST_DESTINATION_ERROR);
		return 1;
	}

	int i ;
	int sum = 0;
	for (i = 0;i<=(headLength*2-1)*2;i=i+2){
		sum = sum+((unsigned char)pBuffer[i]<<8)+(unsigned char)pBuffer[i+1];
	}
	if (sum > 0xFFFF){
		sum = (0xFFFF & sum) + (sum>>16);
	}
	if (sum != 0xffff){  
        ip_DiscardPkt(pBuffer, STUD_IP_TEST_CHECKSUM_ERROR);  
        return 1;  
    	}
	ip_SendtoUp(pBuffer,length);   
    	return 0;
}

int stud_ip_Upsend(char *pBuffer,unsigned short len,unsigned int srcAddr,
				   unsigned int dstAddr,byte protocol,byte ttl)
{	
	//char buffer[len+20] ;
	//buffer = {0};
	char *buffer = (char *)malloc((20 + len) * sizeof(char));
	memset(buffer, 0, len+20);
	memcpy(buffer + 20, pBuffer, len);//connet the fomal data

	buffer[0] = 0x45;
	unsigned short totalLength =  htons(20);  
    	memcpy(buffer + 2, &totalLength, 2);
	buffer[8] = ttl;
	buffer[9] = protocol; //协议 
	
	printf("pre_dis:%x\n",dstAddr);
	printf("pre_srcAddr:%x\n",srcAddr);
	unsigned int src = htonl(srcAddr);    
      unsigned int dis = htonl(dstAddr);
	printf("dis:%x\n",dis);
	printf("src:%x\n",src);
	memcpy(buffer + 12, &src, 4);
	memcpy(buffer + 16, &dis, 4); 
	
	//for(int j=0;j<20;j++){
	//	printf("---%x\n",buffer[j]);
	//}
	//count checksum
	unsigned short checkSum = 0;//int is wrong
	unsigned short sum = 0;	
	int i;
	for (i = 0;i<=(5*2-1)*2;i=i+2){
		//a = (unsigned char)(pBuffer[i] & 0xff);
		//b = (unsigned char)(pBuffer[i+1]& 0xff);
		//printf("---front:%x\n",buffer[i]& 0xff);
		//printf("---back:%x\n",buffer[i+1]& 0xff);
		//printf("%x %x\n",a,b);
		//sum = sum+(a<<8)+b;
		sum = sum+((unsigned char)(pBuffer[i])<<8)+(unsigned char)(pBuffer[i+1]);
		printf("当前sum:%x\n",sum);
	}
	if (sum >= 0xFFFF){
		sum = (0xFFFF & sum) + (sum>>16);
	}
	checkSum = ~sum;
	checkSum = htons(checkSum);
	memcpy(buffer + 10, &checkSum, 2); 
	ip_SendtoLower(pBuffer,len+20);
	return 0;
}
